name: CI

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main
  pull_request_target:
    types:
      - closed
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GOPRIVATE: github.com/weaveworks/cluster-controller

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read # for actions/checkout to fetch code
    steps:
      - name: Configure git for private modules
        env:
          GITHUB_BUILD_USERNAME: ${{ secrets.BUILD_BOT_USER }}
          GITHUB_BUILD_TOKEN: ${{ secrets.BUILD_BOT_PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://${GITHUB_BUILD_USERNAME}:${GITHUB_BUILD_TOKEN}@github.com".insteadOf "https://github.com"

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: 1.24.x
          cache: true

      - name: Test
        run: make test

      - name: e2e Tests
        run: make e2e-tests

  build-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: read # for actions/checkout to fetch code
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0 # for git describe
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Build docs
        run: |
          make api-docs
          if [[ -n $(git status --porcelain) ]]; then
            echo ""
            echo "Docs are out of date!"
            echo "The following files have changed:"
            git status --porcelain
            echo "Please run 'make api-docs' and commit the changes."
            echo "If it was something unrelated to the docs, that is strange... scope down this check or commit those files too?"
            exit 1
          fi

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # for actions/checkout to fetch code
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0 # for git describe
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Get version
        id: get_version
        run: echo "::set-output name=VERSION::$(make version)"

      - name: Log in to the Container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Configure git for private modules
        env:
          GITHUB_BUILD_USERNAME: ${{ secrets.BUILD_BOT_USER }}
          GITHUB_BUILD_TOKEN: ${{ secrets.BUILD_BOT_PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://${GITHUB_BUILD_USERNAME}:${GITHUB_BUILD_TOKEN}@github.com".insteadOf "https://github.com"

      - name: Build and push Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: VERSION=${{ steps.get_version.outputs.VERSION }}

  build-push-helm-chart:
    runs-on: ubuntu-latest
    needs: [build, test]
    # only run on tag
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: read # for actions/checkout to fetch code
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0 # for git describe
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Install Helm
        run: |
          wget --no-verbose https://get.helm.sh/helm-v3.12.1-linux-amd64.tar.gz
          tar -zxvf helm-v3.14.2-linux-amd64.tar.gz
          mv linux-amd64/helm /usr/local/bin/helm
          helm version

      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.BUILD_BOT_USER_WRITE_PACKAGES_PAT }}

      - name: Build and publish chart
        run: |
          make publish-helm-chart
